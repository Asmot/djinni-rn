// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from test.djinni

#include "NativeTestHelpers.hpp"  // my header
#include "NativeAssortedPrimitives.hpp"
#include "NativeClientInterface.hpp"
#include "NativeColor.hpp"
#include "NativeMapListRecord.hpp"
#include "NativeNestedCollection.hpp"
#include "NativePrimitiveList.hpp"
#include "NativeSetRecord.hpp"
#include "NativeUserToken.hpp"

namespace djinni_generated {

em::val NativeTestHelpers::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
        "get_set_record",
        "check_set_record",
        "get_primitive_list",
        "check_primitive_list",
        "get_nested_collection",
        "check_nested_collection",
        "get_map",
        "check_map",
        "get_empty_map",
        "check_empty_map",
        "get_map_list_record",
        "check_map_list_record",
        "check_client_interface_ascii",
        "check_client_interface_nonascii",
        "check_client_interface_args",
        "check_enum_map",
        "check_enum",
        "token_id",
        "create_cpp_token",
        "check_cpp_token",
        "cpp_token_id",
        "check_token_type",
        "return_none",
        "assorted_primitives_id",
        "id_binary",
    });
    return methods;
}

em::val NativeTestHelpers::get_set_record() {
    return ::djinni_generated::NativeSetRecord::fromCpp(::testsuite::TestHelpers::get_set_record());
}
bool NativeTestHelpers::check_set_record(const em::val& w_rec) {
    return ::djinni::Bool::fromCpp(::testsuite::TestHelpers::check_set_record(::djinni_generated::NativeSetRecord::toCpp(w_rec)));
}
em::val NativeTestHelpers::get_primitive_list() {
    return ::djinni_generated::NativePrimitiveList::fromCpp(::testsuite::TestHelpers::get_primitive_list());
}
bool NativeTestHelpers::check_primitive_list(const em::val& w_pl) {
    return ::djinni::Bool::fromCpp(::testsuite::TestHelpers::check_primitive_list(::djinni_generated::NativePrimitiveList::toCpp(w_pl)));
}
em::val NativeTestHelpers::get_nested_collection() {
    return ::djinni_generated::NativeNestedCollection::fromCpp(::testsuite::TestHelpers::get_nested_collection());
}
bool NativeTestHelpers::check_nested_collection(const em::val& w_nc) {
    return ::djinni::Bool::fromCpp(::testsuite::TestHelpers::check_nested_collection(::djinni_generated::NativeNestedCollection::toCpp(w_nc)));
}
em::val NativeTestHelpers::get_map() {
    return ::djinni::Map<::djinni::String, ::djinni::I64>::fromCpp(::testsuite::TestHelpers::get_map());
}
bool NativeTestHelpers::check_map(const em::val& w_m) {
    return ::djinni::Bool::fromCpp(::testsuite::TestHelpers::check_map(::djinni::Map<::djinni::String, ::djinni::I64>::toCpp(w_m)));
}
em::val NativeTestHelpers::get_empty_map() {
    return ::djinni::Map<::djinni::String, ::djinni::I64>::fromCpp(::testsuite::TestHelpers::get_empty_map());
}
bool NativeTestHelpers::check_empty_map(const em::val& w_m) {
    return ::djinni::Bool::fromCpp(::testsuite::TestHelpers::check_empty_map(::djinni::Map<::djinni::String, ::djinni::I64>::toCpp(w_m)));
}
em::val NativeTestHelpers::get_map_list_record() {
    return ::djinni_generated::NativeMapListRecord::fromCpp(::testsuite::TestHelpers::get_map_list_record());
}
bool NativeTestHelpers::check_map_list_record(const em::val& w_m) {
    return ::djinni::Bool::fromCpp(::testsuite::TestHelpers::check_map_list_record(::djinni_generated::NativeMapListRecord::toCpp(w_m)));
}
void NativeTestHelpers::check_client_interface_ascii(const em::val& w_i) {
    return ::testsuite::TestHelpers::check_client_interface_ascii(::djinni_generated::NativeClientInterface::toCpp(w_i));
}
void NativeTestHelpers::check_client_interface_nonascii(const em::val& w_i) {
    return ::testsuite::TestHelpers::check_client_interface_nonascii(::djinni_generated::NativeClientInterface::toCpp(w_i));
}
void NativeTestHelpers::check_client_interface_args(const em::val& w_i) {
    return ::testsuite::TestHelpers::check_client_interface_args(::djinni_generated::NativeClientInterface::toCpp(w_i));
}
void NativeTestHelpers::check_enum_map(const em::val& w_m) {
    return ::testsuite::TestHelpers::check_enum_map(::djinni::Map<::djinni_generated::NativeColor, ::djinni::String>::toCpp(w_m));
}
void NativeTestHelpers::check_enum(int32_t w_c) {
    return ::testsuite::TestHelpers::check_enum(::djinni_generated::NativeColor::toCpp(w_c));
}
em::val NativeTestHelpers::token_id(const em::val& w_t) {
    return ::djinni_generated::NativeUserToken::fromCpp(::testsuite::TestHelpers::token_id(::djinni_generated::NativeUserToken::toCpp(w_t)));
}
em::val NativeTestHelpers::create_cpp_token() {
    return ::djinni_generated::NativeUserToken::fromCpp(::testsuite::TestHelpers::create_cpp_token());
}
void NativeTestHelpers::check_cpp_token(const em::val& w_t) {
    return ::testsuite::TestHelpers::check_cpp_token(::djinni_generated::NativeUserToken::toCpp(w_t));
}
int64_t NativeTestHelpers::cpp_token_id(const em::val& w_t) {
    return ::djinni::I64::fromCpp(::testsuite::TestHelpers::cpp_token_id(::djinni_generated::NativeUserToken::toCpp(w_t)));
}
void NativeTestHelpers::check_token_type(const em::val& w_t,const std::string& w_type) {
    return ::testsuite::TestHelpers::check_token_type(::djinni_generated::NativeUserToken::toCpp(w_t),
                                                      ::djinni::String::toCpp(w_type));
}
em::val NativeTestHelpers::return_none() {
    return ::djinni::Optional<std::experimental::optional, ::djinni::I32>::fromCpp(::testsuite::TestHelpers::return_none());
}
em::val NativeTestHelpers::assorted_primitives_id(const em::val& w_i) {
    return ::djinni_generated::NativeAssortedPrimitives::fromCpp(::testsuite::TestHelpers::assorted_primitives_id(::djinni_generated::NativeAssortedPrimitives::toCpp(w_i)));
}
em::val NativeTestHelpers::id_binary(const em::val& w_b) {
    return ::djinni::Binary::fromCpp(::testsuite::TestHelpers::id_binary(::djinni::Binary::toCpp(w_b)));
}

EMSCRIPTEN_BINDINGS(test_helpers) {
    em::class_<::testsuite::TestHelpers>("test_helpers")
        .smart_ptr<std::shared_ptr<::testsuite::TestHelpers>>("test_helpers")
        .function("nativeDestroy", &NativeTestHelpers::nativeDestroy)
        .class_function("get_set_record", NativeTestHelpers::get_set_record)
        .class_function("check_set_record", NativeTestHelpers::check_set_record)
        .class_function("get_primitive_list", NativeTestHelpers::get_primitive_list)
        .class_function("check_primitive_list", NativeTestHelpers::check_primitive_list)
        .class_function("get_nested_collection", NativeTestHelpers::get_nested_collection)
        .class_function("check_nested_collection", NativeTestHelpers::check_nested_collection)
        .class_function("get_map", NativeTestHelpers::get_map)
        .class_function("check_map", NativeTestHelpers::check_map)
        .class_function("get_empty_map", NativeTestHelpers::get_empty_map)
        .class_function("check_empty_map", NativeTestHelpers::check_empty_map)
        .class_function("get_map_list_record", NativeTestHelpers::get_map_list_record)
        .class_function("check_map_list_record", NativeTestHelpers::check_map_list_record)
        .class_function("check_client_interface_ascii", NativeTestHelpers::check_client_interface_ascii)
        .class_function("check_client_interface_nonascii", NativeTestHelpers::check_client_interface_nonascii)
        .class_function("check_client_interface_args", NativeTestHelpers::check_client_interface_args)
        .class_function("check_enum_map", NativeTestHelpers::check_enum_map)
        .class_function("check_enum", NativeTestHelpers::check_enum)
        .class_function("token_id", NativeTestHelpers::token_id)
        .class_function("create_cpp_token", NativeTestHelpers::create_cpp_token)
        .class_function("check_cpp_token", NativeTestHelpers::check_cpp_token)
        .class_function("cpp_token_id", NativeTestHelpers::cpp_token_id)
        .class_function("check_token_type", NativeTestHelpers::check_token_type)
        .class_function("return_none", NativeTestHelpers::return_none)
        .class_function("assorted_primitives_id", NativeTestHelpers::assorted_primitives_id)
        .class_function("id_binary", NativeTestHelpers::id_binary)
        ;
}

}  // namespace djinni_generated
