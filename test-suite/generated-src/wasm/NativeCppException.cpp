// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from exception.djinni

#include "NativeCppException.hpp"  // my header
#include "NativeJsException.hpp"

namespace djinni_generated {

em::val NativeCppException::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
        "throwAnException",
        "throwJsException",
    });
    return methods;
}

int32_t NativeCppException::throw_an_exception(const CppType& self) {
    try {
        auto r = self->throw_an_exception();
        return ::djinni::I32::fromCpp(r);
    }
    catch(const std::exception& e) {
        djinni::djinni_throw_native_exception(e);
        throw;
    }
}
int32_t NativeCppException::throw_js_exception(const CppType& self, const em::val& w_cb) {
    try {
        auto r = self->throw_js_exception(::djinni_generated::NativeJsException::toCpp(w_cb));
        return ::djinni::I32::fromCpp(r);
    }
    catch(const std::exception& e) {
        djinni::djinni_throw_native_exception(e);
        throw;
    }
}
em::val NativeCppException::get() {
    try {
        auto r = ::testsuite::CppException::get();
        return ::djinni_generated::NativeCppException::fromCpp(r);
    }
    catch(const std::exception& e) {
        djinni::djinni_throw_native_exception(e);
        throw;
    }
}

EMSCRIPTEN_BINDINGS(testsuite_cpp_exception) {
    ::djinni::DjinniClass_<::testsuite::CppException>("testsuite_CppException", "testsuite.CppException")
        .smart_ptr<std::shared_ptr<::testsuite::CppException>>("testsuite_CppException")
        .function("nativeDestroy", &NativeCppException::nativeDestroy)
        .function("throwAnException", NativeCppException::throw_an_exception)
        .function("throwJsException", NativeCppException::throw_js_exception)
        .class_function("get", NativeCppException::get)
        ;
}

}  // namespace djinni_generated
