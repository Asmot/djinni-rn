// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from single_language_interfaces.djinni

#include "NativeUsesSingleLanguageListeners.hpp"  // my header
#include "NativeJavaOnlyListener.hpp"
#include "NativeObjcOnlyListener.hpp"

namespace djinni_generated {

em::val NativeUsesSingleLanguageListeners::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
        "callForObjC",
        "returnForObjC",
        "callForJava",
        "returnForJava",
    });
    return methods;
}

void NativeUsesSingleLanguageListeners::callForObjC(const CppType& self, const em::val& w_l) {
    return self->callForObjC(::djinni_generated::NativeObjcOnlyListener::toCpp(w_l));
}
em::val NativeUsesSingleLanguageListeners::returnForObjC(const CppType& self) {
    return ::djinni_generated::NativeObjcOnlyListener::fromCpp(self->returnForObjC());
}
void NativeUsesSingleLanguageListeners::callForJava(const CppType& self, const em::val& w_l) {
    return self->callForJava(::djinni_generated::NativeJavaOnlyListener::toCpp(w_l));
}
em::val NativeUsesSingleLanguageListeners::returnForJava(const CppType& self) {
    return ::djinni_generated::NativeJavaOnlyListener::fromCpp(self->returnForJava());
}

void NativeUsesSingleLanguageListeners::JsProxy::callForObjC(const std::shared_ptr<::testsuite::ObjcOnlyListener> & l) {
    return _jsRef().call<void>("callForObjC", ::djinni_generated::NativeObjcOnlyListener::fromCpp(l));
}

std::shared_ptr<::testsuite::ObjcOnlyListener> NativeUsesSingleLanguageListeners::JsProxy::returnForObjC() {
    return ::djinni_generated::NativeObjcOnlyListener::toCpp(_jsRef().call<em::val>("returnForObjC"));
}

void NativeUsesSingleLanguageListeners::JsProxy::callForJava(const std::shared_ptr<::testsuite::JavaOnlyListener> & l) {
    return _jsRef().call<void>("callForJava", ::djinni_generated::NativeJavaOnlyListener::fromCpp(l));
}

std::shared_ptr<::testsuite::JavaOnlyListener> NativeUsesSingleLanguageListeners::JsProxy::returnForJava() {
    return ::djinni_generated::NativeJavaOnlyListener::toCpp(_jsRef().call<em::val>("returnForJava"));
}

EMSCRIPTEN_BINDINGS(uses_single_language_listeners) {
    em::class_<::testsuite::UsesSingleLanguageListeners>("uses_single_language_listeners")
        .smart_ptr<std::shared_ptr<::testsuite::UsesSingleLanguageListeners>>("uses_single_language_listeners")
        .function("nativeDestroy", &NativeUsesSingleLanguageListeners::nativeDestroy)
        .function("callForObjC", NativeUsesSingleLanguageListeners::callForObjC)
        .function("returnForObjC", NativeUsesSingleLanguageListeners::returnForObjC)
        .function("callForJava", NativeUsesSingleLanguageListeners::callForJava)
        .function("returnForJava", NativeUsesSingleLanguageListeners::returnForJava)
        ;
}

}  // namespace djinni_generated
