// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from constant_enum.djinni

#include "NativeConstantInterfaceWithEnum.hpp"  // my header
#include "NativeConstantEnum.hpp"

namespace djinni_generated {

em::val NativeConstantInterfaceWithEnum::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
    });
    return methods;
}


EMSCRIPTEN_BINDINGS(constant_interface_with_enum) {
    em::class_<::testsuite::ConstantInterfaceWithEnum>("ConstantInterfaceWithEnum")
        .smart_ptr<std::shared_ptr<::testsuite::ConstantInterfaceWithEnum>>("ConstantInterfaceWithEnum")
        .function("nativeDestroy", &NativeConstantInterfaceWithEnum::nativeDestroy)
        ;
}

namespace {
    EM_JS(void, djinni_init_testsuite_constant_interface_with_enum_consts, (), {
        if (!('ConstantInterfaceWithEnum' in Module)) {
            Module.ConstantInterfaceWithEnum = {};
        }
        Module.ConstantInterfaceWithEnum.CONST_ENUM = Module.ConstantEnum.SOME_VALUE;
    })
}
void NativeConstantInterfaceWithEnum::staticInitialize() {
    static std::once_flag initOnce;
    std::call_once(initOnce, djinni_init_testsuite_constant_interface_with_enum_consts);
}

EMSCRIPTEN_BINDINGS(testsuite_constant_interface_with_enum_consts) {
    NativeConstantEnum::staticInitialize();
    NativeConstantInterfaceWithEnum::staticInitialize();
}

}  // namespace djinni_generated
